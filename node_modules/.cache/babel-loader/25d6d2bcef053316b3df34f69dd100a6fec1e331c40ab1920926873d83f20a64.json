{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell-E5450\\\\smart-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Navigation from './Components/Navigation/Navigation';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = 'ae10424c89894a3baac5b8908dedb5d0';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'lakic924';\n  const APP_ID = 'test';\n  // Change these to whatever model and image URL you want to use\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n\n      //app.models.predict('face-detection',this.state.input )\n      fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3001/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = initialState;\n  }\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      box,\n      route\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"circle\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","ParticlesBg","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","initialState","input","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","state","fetch","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Dell-E5450/smart-brain/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Navigation from './Components/Navigation/Navigation';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport './App.css';\n\n\n\nconst returnClarifaiRequestOptions = (imageUrl) =>{\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    const PAT = 'ae10424c89894a3baac5b8908dedb5d0';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = 'lakic924';       \n    const APP_ID = 'test';\n    // Change these to whatever model and image URL you want to use\n    const MODEL_ID = 'face-detection';  \n    const IMAGE_URL = imageUrl;\n\n    const raw = JSON.stringify({\n        \"user_app_id\": {\n            \"user_id\": USER_ID,\n            \"app_id\": APP_ID\n        },\n        \"inputs\": [\n            {\n                \"data\": {\n                    \"image\": {\n                        \"url\": IMAGE_URL\n                    }\n                }\n            }\n        ]\n    });\n   const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': 'Key ' + PAT\n        },\n        body: raw\n    };\n    return requestOptions\n}\nconst initialState ={\n\n      input:'',\n      imageUrl:'',\n      box:{},\n      route:'signin',\n      isSignedIn:false,\n      user:{\n        id:'',\n        name:'',\n        email:'',\n        entries: 0,\n        joined:''\n      }\n    }\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = initialState;\n}\n  loadUser=(data)=>{\n    this.setState({user:{\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n   \n   calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box:box});\n}\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n \n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n   \n    //app.models.predict('face-detection',this.state.input )\n     fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n        .then(response => response.json())\n        .then(response =>{\n            if(response){\n              fetch('http://localhost:3001/image',{\n              method:'put',\n              headers:{'Content-Type': 'application/json'},\n              body: JSON.stringify({\n              id: this.state.user.id\n              })\n              })\n              .then(response =>response.json())\n              .then(count=>{\n                this.setState(Object.assign(this.state.user,{entries: count}))\n              })\n              .catch(console.log)\n            }\n          \n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n        .catch(err => console.log(err))\n   }\n\n\n  onRouteChange =(route)=>{\n    if (route === 'signout'){\n      this.setState(initialState)\n    }else if(route === 'home'){\n      this.setState({isSignedIn:true})\n    }\n    this.setState({route:route});\n  }\n\n\n  render (){\n   const {isSignedIn, imageUrl, box, route} = this.state;\n    return (\n    <div className=\"App\">\n      <ParticlesBg type=\"circle\" bg={true} />\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n      {route === 'home'\n      ? <div>\n         <Logo />\n         <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n         <ImageLinkForm \n         onInputChange={this.onInputChange} \n         onButtonSubmit={this.onButtonSubmit} />\n         <FaceRecognition box={this.state.box} imageUrl={imageUrl}/>\n        </div>\n        : (\n          route === 'signin'\n          ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        )\n   }\n\n   </div>\n  );\n}\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}