{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell-E5450\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport './App.css';\nimport Rank from './Components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'f7c7df013966494dbe561428a0723fd6'\n});\nconst returnClarifaiRequestOptions = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = 'ae10424c89894a3baac5b8908dedb5d0';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = 'lakic924';\n  const APP_ID = 'test';\n  // Change these to whatever model and image URL you want to use\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n\n      //app.models.predict('face-detection',this.state.input )\n      fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"circle\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this.state.box,\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Clarifai","Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","FaceRecognition","jsxDEV","_jsxDEV","app","App","apiKey","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","value","onButtonSubmit","state","fetch","then","response","json","catch","err","console","log","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Dell-E5450/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport './App.css';\nimport Rank from './Components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\n\n\n\nconst app = new Clarifai.App({\n apiKey: 'f7c7df013966494dbe561428a0723fd6'\n});\n\nconst returnClarifaiRequestOptions = (imageUrl) =>{\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    const PAT = 'ae10424c89894a3baac5b8908dedb5d0';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = 'lakic924';       \n    const APP_ID = 'test';\n    // Change these to whatever model and image URL you want to use\n    const MODEL_ID = 'face-detection';  \n    const IMAGE_URL = imageUrl;\n\n    const raw = JSON.stringify({\n        \"user_app_id\": {\n            \"user_id\": USER_ID,\n            \"app_id\": APP_ID\n        },\n        \"inputs\": [\n            {\n                \"data\": {\n                    \"image\": {\n                        \"url\": IMAGE_URL\n                    }\n                }\n            }\n        ]\n    });\n   const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': 'Key ' + PAT\n        },\n        body: raw\n    };\n    return requestOptions\n}\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input:'',\n      imageUrl:'',\n      box:{}\n    }\n  }\n   \n   calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box:box});\n}\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n \n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n   \n    //app.models.predict('face-detection',this.state.input )\n     fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n        .then(response => response.json())\n    .then((response) =>\n     this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch((err) => console.log(err));\n   }\n  \n  render (){\n    return (\n    <div className=\"App\">\n      <ParticlesBg type=\"circle\" bg={true} />\n      <Navigation />\n      <Logo />\n      <Rank />\n      <ImageLinkForm \n      onInputChange={this.onInputChange} \n      onButtonSubmit={this.onButtonSubmit} />\n     <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n   </div>\n  );\n}\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}