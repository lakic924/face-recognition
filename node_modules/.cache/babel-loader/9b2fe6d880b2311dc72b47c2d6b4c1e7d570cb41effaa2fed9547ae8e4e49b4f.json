{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell-E5450\\\\facerecognitionbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport './App.css';\nimport Rank from './Components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: '39dd62aa0cc942ba89b43e0e33a4ad5b'\n});\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      this.getToken().then(token => this.detectFaces(this.state.input, token)).catch(err => console.log(err));\n    };\n    this.getToken = () => {\n      const url = 'https://api.clarifai.com/v2/token';\n      const clientId = 'YOUR_CLIENT_ID';\n      const clientSecret = 'YOUR_CLIENT_SECRET';\n      return fetch(url, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Basic ${btoa(`${clientId}:${clientSecret}`)}`,\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => data.access_token).catch(error => console.error(error));\n    };\n    this.detectFaces = (imageUrl, token) => {\n      const headers = {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      };\n      const data = {\n        inputs: [{\n          data: {\n            image: {\n              url: imageUrl\n            }\n          }\n        }]\n      };\n      fetch('https://api.clarifai.com/v2/models/' + Clarifai.FACE_DETECT_MODEL + '/outputs', {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(data)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      }).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(error => console.error(error));\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"circle\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this.state.box,\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Clarifai","Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","FaceRecognition","jsxDEV","_jsxDEV","app","App","apiKey","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","getToken","then","token","detectFaces","catch","err","console","log","url","clientId","clientSecret","fetch","method","headers","btoa","response","ok","Error","status","json","access_token","error","Authorization","inputs","FACE_DETECT_MODEL","body","JSON","stringify","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Dell-E5450/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './Components/Navigation/Navigation';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport './App.css';\nimport Rank from './Components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\n\nconst app = new Clarifai.App({\n  apiKey: '39dd62aa0cc942ba89b43e0e33a4ad5b',\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n    };\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n\n    this.getToken()\n      .then((token) => this.detectFaces(this.state.input, token))\n      .catch((err) => console.log(err));\n  };\n\n  getToken = () => {\n    const url = 'https://api.clarifai.com/v2/token';\n    const clientId = 'YOUR_CLIENT_ID';\n    const clientSecret = 'YOUR_CLIENT_SECRET';\n\n    return fetch(url, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Basic ${btoa(`${clientId}:${clientSecret}`)}`,\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => data.access_token)\n      .catch((error) => console.error(error));\n  };\n\n  detectFaces = (imageUrl, token) => {\n    const headers = {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    };\n\n    const data = {\n      inputs: [\n        {\n          data: {\n            image: {\n              url: imageUrl,\n            },\n          },\n        },\n      ],\n    };\n\n    fetch('https://api.clarifai.com/v2/models/' + Clarifai.FACE_DETECT_MODEL + '/outputs', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((response) => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch((error) => console.error(error));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"circle\" bg={true} />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n        <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}